/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.thebountyhunter;

import static com.mycompany.thebountyhunter.Commands.PickObject;
import com.mycompany.thebountyhunter.Rooms.*;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import javax.swing.JOptionPane;

public class Accesso extends javax.swing.JFrame {

    public static Progresso p;

    public Accesso() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        username = new javax.swing.JLabel();
        password = new javax.swing.JLabel();
        login = new javax.swing.JButton();
        register = new javax.swing.JButton();
        testousername = new javax.swing.JTextField();
        testopassword = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        username.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        username.setText("Username");
        getContentPane().add(username, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        password.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        password.setText("Password");
        getContentPane().add(password, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, -1, -1));

        login.setBackground(new java.awt.Color(255, 51, 51));
        login.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        login.setForeground(new java.awt.Color(51, 0, 153));
        login.setText("LOGIN");
        login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });
        getContentPane().add(login, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 190, 50));

        register.setBackground(new java.awt.Color(255, 51, 0));
        register.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        register.setForeground(new java.awt.Color(51, 0, 153));
        register.setText("REGISTER");
        register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerActionPerformed(evt);
            }
        });
        getContentPane().add(register, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 100, 180, 50));

        testousername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testousernameActionPerformed(evt);
            }
        });
        getContentPane().add(testousername, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 150, -1));

        testopassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testopasswordActionPerformed(evt);
            }
        });
        getContentPane().add(testopassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 150, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void registerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerActionPerformed
        File f = new File("salvataggi/" + testousername.getText() + ".dat");
        if (f.exists() && !f.isDirectory()) {
            JOptionPane.showMessageDialog(this, "This user already exists.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (String.valueOf(testopassword.getPassword()).equals("") || testousername.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "The user or the password field can't be empty.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            p = new Progresso();
            ArrayList<Integer> lista = new ArrayList<>();
            p.setSoldi(50);
            p.setRoom(0);
            p.setNome(testousername.getText());
            p.setPassword(String.valueOf(testopassword.getPassword()));
            p.setList(lista);
            FileOutputStream fos = null;
            try {
                fos = new FileOutputStream("salvataggi/" + testousername.getText() + ".dat");
                ObjectOutputStream salvaObj = new ObjectOutputStream(fos);
                salvaObj.writeObject(p);
                salvaObj.flush();
                fos.close();
                JOptionPane.showMessageDialog(this, "Account created successfully!");
            } catch (FileNotFoundException e1) {
                System.out.println("Non riesco a aprire il file in scrittura1");
            } catch (IOException e2) {
                System.out.println("Non riesco a aprire il file in scrittura");
            }
        }


    }//GEN-LAST:event_registerActionPerformed

    private void loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginActionPerformed
        p = null;

        File f = new File("salvataggi/" + testousername.getText() + ".dat");
        if (f.exists() && !f.isDirectory()) {
            FileInputStream flusso = null;
            ObjectInputStream leggiObj = null;
            try {
                flusso = new FileInputStream(f.getPath());
                leggiObj = new ObjectInputStream(flusso);
                p = (Progresso) leggiObj.readObject();
                if (p.getPassword().equals(String.valueOf(testopassword.getPassword()))) {
                    dispose();
                    Game game = new Game();
                    game.main();

                    for (int i = 0; i < Accesso.p.list.size(); i++) {
                        if (Accesso.p.list.get(i) == SceltaRevolver.cattleman.getId()) {
                            PickObject(SceltaRevolver.cattleman);
                        } else if (Accesso.p.list.get(i) == SceltaRevolver.magnum.getId()) {
                            PickObject(SceltaRevolver.magnum);
                        } else if (Accesso.p.list.get(i) == SceltaRevolver.heavy.getId()) {
                            PickObject(SceltaRevolver.heavy);
                        }
                        else if (Accesso.p.list.get(i) == Saloon.messaggio.getId()) {
                            PickObject(Saloon.messaggio);
                        }
                        else if(Accesso.p.list.get(i) == CasaArthur.cibo_dispensa.getId()){
                            PickObject(CasaArthur.cibo_dispensa);
                        }
                        else if(Accesso.p.list.get(i) == CatalogoArmeria.pompa.getId()){
                            PickObject(CatalogoArmeria.pompa);
                        }
                        else if(Accesso.p.list.get(i) == CatalogoArmeria.cecchino.getId()){
                            PickObject(CatalogoArmeria.cecchino);
                        }
                        else if(Accesso.p.list.get(i) == CatalogoArmeria.ascia.getId()){
                            PickObject(CatalogoArmeria.ascia);
                        }
                        else if(Accesso.p.list.get(i) == Posta.messaggioposta.getId()){
                            PickObject(Posta.messaggioposta);
                        }
                     
                    }
              

                } else {
                    JOptionPane.showMessageDialog(this, "Incorrect password", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception ex) {
                System.out.println("Non riesco ad aprire il file");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Username incorrect", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_loginActionPerformed

    private void testousernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testousernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_testousernameActionPerformed

    private void testopasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testopasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_testopasswordActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Accesso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Accesso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Accesso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Accesso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Accesso().setVisible(true);
           
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton login;
    private javax.swing.JLabel password;
    private javax.swing.JButton register;
    private javax.swing.JPasswordField testopassword;
    public static javax.swing.JTextField testousername;
    private javax.swing.JLabel username;
    // End of variables declaration//GEN-END:variables

 
}
